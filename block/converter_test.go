package block

import (
	"encoding/base64"
	"github.com/streamingfast/firehose-aelf/pb/aelf"
	"github.com/test-go/testify/assert"
	"google.golang.org/protobuf/proto"
	"testing"
)

func TestConvertBlock(t *testing.T) {
	blockSample := ""
	data, err := base64.StdEncoding.DecodeString(blockSample)
	assert.NoError(t, err)
	var blk aelf.Block
	err = proto.Unmarshal(data, &blk)
	assert.NoError(t, err)
	newBlck := ConvertBlock("0119d9910a9d3e3b114679b262974cc4f4a15f82990552b2585f5b56d424c47d", &blk)
	assert.Equal(t, int64(8), newBlck.Height)
	assert.Equal(t, "0119d9910a9d3e3b114679b262974cc4f4a15f82990552b2585f5b56d424c47d", newBlck.BlockHash)
}
